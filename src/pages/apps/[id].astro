---
import { getCollection, render } from 'astro:content';
import Base from '~/components/Base.astro';
export async function getStaticPaths() {
  const apps = await getCollection('apps');
  return apps.map(post => ({
    params: { id: post.id },
    props: { post },
  }));
}
const { post } = Astro.props;
const { Content } = await render(post);
---
<Base>
    <div class="p-4">
        <h1 class="text-4xl font-bold mb-2">{post.data.title}</h1>
        <div class="flex flex-col gap-2">
            <ul class="flex gap-2">
            {post.data.tags.map(tag => (
                <li class="badge badge-sm badge-neutral"><a href=`/tags/${tag}/`>{tag}</a></li>
            ))}
            </ul>
            <div>
                {post.data.state === "unstable" && <div class="badge badge-soft badge-warning">Unstable</div>}
                {post.data.state === "stable" && <div class="badge badge-soft badge-success">Stable</div>}
                {post.data.state === "abandoned" && <div class="badge badge-soft badge-error">Abandoned</div>}
                (last checked <time class="italic" datetime={post.data.lastChecked}>{post.data.lastChecked}</time>)
            </div>
            <div class="flex gap-2">
                {post.data.links.website && <a class="link" target="_blank" href={post.data.links.website}>Website</a>}
                {post.data.links.source && <a class="link" target="_blank" href={post.data.links.source}>Source</a>}
                {post.data.links.review && <a class="link" target="_blank" href={post.data.links.review}>Review</a>}
            </div>
            <p>{post.data.description}</p>
        </div>
        <Content/>
    </div>
</Base>
